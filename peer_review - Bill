1. Does the project appear to meet the technical requirements? Write up one sentence on your findings and give a score 0-3.
The app uses a lot of OOP and api calling. Nice work here - a 3 !!

Is your peer making API calls, using SDK's/third-party libraries?
--yes - a few API's 

Is your peer making use of Services? If so, are they offloading long tasks to a separate thread, i.e. AsyncTask, Runnable, IntentService, etc.
--yes, using AsyncTask. 

Is your peer making use of Fragments? If so, are they passing data from Fragment to Activity via interfaces? If not, why did absense of Fragments make sense?
--User is not using any fragments at this point.

Is your peer making use of RecyclerView? If so, does it appear to be working correctly ( implementation and otherwise )?
--RecyclerView is not in use for the app. 

Is your peer making use of some sort of persistent storage, i.e. Firebase or SQLite? If so, why do you think Firebase/SQLite was chosen? Could they have used one or the other instead and why?
--SQLite - to save current data on the device.

2. Does the project appear to be creative, innovative, and different from any competition? Write up one sentence on your findings and give a score 0-3.
--I don't know any other competition app that use these type of data and calculate savings for you. - 2

Is your peer making use of proper UX patterns we learned in class? If not, what are they doing that is unconvetional or that might confuse a user ( you )?
-- pretty need to see energy bars 

Is your peer making anything cool or awesome that you would like to note or applaud them on?
-- connecting energy and utilities data together seem awesome to do and using Google API!

3. Does the project appear to follow correct coding styles and best practices? Write up one sentence on your findings and give a score 0-3.
-- Nice job on Java Docs to explain how each method works. 3

Are you able to reasonably follow the code without having anyone answer your questions?
 -- each methods and classes have enough explanation on how it works.

Are you able to make sense of what the code is doing or is trying to do?
-- I can tell it's an app about energy/utilites and savings

4. Find two pieces of code of any size: one that is readable and easy to follow and one that is difficult to follow and understand.

What makes the readable code readable? Be as detailed as you can in your answer, it can be challenging to explain why something is easy to undertand
-- the java docs make it easier to understand how things work on the codes. 

What makes the difficult code harder to follow? Be as detailed as you can in your answer.


5. High level project overview: Take a look at as many individual files as you have time for

Does this class make sense?
-- all the class make sense and easy to see how it will connect
Does the structure of the class make sense?
-- yes
Is it clear what this class is supposed to do?
-- yes
